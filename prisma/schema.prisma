// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  PENDING
  INACTIVE
}

model User {
  id String @id @default(uuid())

  email    String     @unique
  name     String?
  password String?
  role     UserRole   @default(USER)
  status   UserStatus @default(PENDING)

  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  memberships      Membership[]
  paymentCustomers PaymentCustomer[]

  @@map("user")
}

model Organization {
  id String @id @default(uuid())

  name String

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  memberships Membership[]

  @@map("organization")
}

enum MembershipRole {
  OWNER
  ADMIN
  MEMBER
}

enum MembershipStatus {
  ACTIVE
  PENDING
}

model Membership {
  id String @id @default(uuid())

  role      MembershipRole   @default(MEMBER)
  status    MembershipStatus @default(PENDING)
  isDefault Boolean          @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           User           @relation(fields: [userId], references: [id])
  userId         String
  organization   Organization   @relation(fields: [organizationId], references: [id])
  organizationId String
  subscriptions  Subscription[]
  transactions   Transaction[]
  tontines       Tontine[]

  @@unique([userId, organizationId])
  @@map("membership")
}

enum SubscriptionService {
  PROJECT_MANAGEMENT
  SKIL_MANAGEMENT
}

model Subscription {
  id String @id @default(uuid())

  service     SubscriptionService
  expiredDate DateTime            @db.Date

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  membership   Membership @relation(fields: [membershipId], references: [id])
  membershipId String

  @@unique([membershipId, service])
  @@map("subscription")
}

enum PspType {
  STRIPE
}

model PaymentCustomer {
  id String @id @default(uuid())

  pspId              String  @unique
  pspType            PspType
  paymentMethodPspId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("payment_customer")
}

enum TransactionType {
  INCOME
  EXPENDITURE
}

model Transaction {
  id String @id @default(uuid())

  title       String
  amount      String
  currency    String
  description String?
  date        DateTime        @db.Date
  type        TransactionType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  membership   Membership @relation(fields: [membershipId], references: [id])
  membershipId String

  @@map("transaction")
}

model Tontine {
  id String @id @default(uuid())

  title       String
  amount      String
  currency    String
  description String?
  date        DateTime @db.Date

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  membership   Membership @relation(fields: [membershipId], references: [id])
  membershipId String

  @@map("tontine")
}
